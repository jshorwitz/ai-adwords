[tool.poetry]
name = "ai-adwords"
version = "0.1.0"
description = "AI-powered Google Ads management application"
authors = ["Joel Horwitz <joel@example.com>"]
readme = "README.md"
packages = [{include = "ads", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
google-ads = "^24.1.0"
google-cloud-bigquery = "^3.12.0"
pandas = "^2.1.0"
db-dtypes = "^1.2.0"
psycopg2-binary = "^2.9.7"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43"}
pydantic-settings = "^2.0.0"
typer = "^0.9.0"
pydantic = {extras = ["email"], version = "^2.11.7"}
python-dotenv = "^1.0.0"
fastapi = "^0.103.0"
uvicorn = "^0.23.0"
google-auth = "^2.40.3"
google-auth-oauthlib = "^1.2.2"
streamlit = "^1.28.0"
plotly = "^5.17.0"
altair = "^5.1.0"
google-analytics-data = "^0.18.0"
posthog = "^3.1.0"
requests = "^2.31.0"
rich = "^14.1.0"
argon2-cffi = "^25.1.0"
asyncpg = "^0.30.0"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.20"
jinja2 = "^3.1.6"
authlib = "^1.6.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
mypy = "^1.5.0"
ruff = "^0.0.287"
black = "^23.7.0"
httpx = "^0.24.1"

[tool.poetry.scripts]
ads-cli = "cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.isort]
known-first-party = ["ads"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
